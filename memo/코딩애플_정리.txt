글 수정 기능 
Part 2
MongoDB 셋팅하기 (무료 호스팅도 받아보자)
Database에 자료 저장하는 법 (한줄이면 끝)
HTML에 DB데이터 꽂아넣는 법 
1 (EJS)HTML에 DB데이터 꽂아넣는 법 2 (DB데이터 읽기)심심할 때 읽어보는 DB의 종류와 특징
게시물마다 번호를 달아 저장하려면게시물마다 번호 달기 
2 : DB Update 함수와 inc 연산자AJAX로 삭제요청하기 
1 (HTML 파일 구성)AJAX로 삭제요청하기 
2 (서버는 뭘해야하나)AJAX로 삭제요청하기 
3 (jQuery를 이용한 UI 기능) & 여러가지 응답방법
쇼핑몰처럼 상세페이지를 만들어보자 (URL parameter)
(쉬어가기) Bootstrap 디자인 넣기 & HTML 조립식 개발하기
 
Part3.
1 : /edit 페이지 안내와 method-override글 수정 기능 
2 : DB 데이터를 수정해보자 (이쯤되면 혼자서도 가능 ㅇㅋ)세션, JWT, OAuth 등 회원인증 방법론 쉽게 이해하기(회원인증기능 
1) 로그인 페이지 만들기 & 아이디 비번 검사 회원인증기능 
2) 아이디 비번을 DB와 비교하고 세션 만들어주기(회원인증기능 
3) 로그인 유저만 접속할 수 있는 페이지 만들기.env 파일에서 민감한 환경변수들 관리하기검색기능 만들기
###
1 : URL query string검색기능 만들기 
2 : 게시물이 100만개일 때 쓰는 indexing 개념설명검색기능 만들기 
3 : 네이버같은 검색기능 만들려면 (Search index)회원 기능을 포함한 게시판 기능
router 폴더와 파일을 만들어 API들 관리하기

Google Cloud로 5분만에 내 사이트 배포하자 ($300 무료 크레딧)
이미지 업로드 & 이미지 서버 만들기
쇼핑몰 등 실제 서비스 만들 때 자주묻는 질문들
유저간 채팅기능 만들기 
1. 채팅방 만들기유저간 채팅기능 만들기 
2. 채팅방 숙제유저간 채팅기능 만들기 
3. 메세지 발행유저간 채팅기능 만들기 
4. 서버와의 실시간 소통 (SSE)유저간 채팅기능 만들기 
5. DB 변동사항 실시간 업데이트
(Socket.io) 실시간 데이터 보내고 받는 법
(Socket.io) 실시간 데이터 보내고 받는 법 
2Node+Express 서버와 React 연동하려면

1. GET, POST, PUT, DELETE
- GET : req.query (list.ejs 에 검색 기능)
- POST : req.body
- PUT, DELETE : (method-override 설치)
	<form action="/edit?_method=PUT" method="POST">
app.use(methodOverride('_method'))

2. 로그인, 세션, 접근 제한, mypage
2-1. // npm i passport, passport-local, express-session
app.get('/login' ) -> login.ejs : form action="/login"
app.post('/login', passport__, (req, res)) --> 
2-2.
passport.use(new LocalStrategy({
db.collection('login').findOne({ id: 입력한아이디 }, function (에러, 결과) {

2-3. 세션 저장과 사용하기
//세션 저장
passport.serializeUser((user, done)=>{
// 저장된 세션으로 db 와 비교
passport.deserializeUser((아이디, done)=>{ //아이디<--user.id
	db.collection('login.findOne({id:아이디}, (error, result))


const express = require('express');
const app = express();
// Express 4.16 이상은 body-parser포함
app.use(express.json());
app.use(express.urlencoded({extended: false}));
const MongoClient = require('mongodb').MongoClient;
app.set('view engine', 'ejs'); // res.render('list.ejs')
app.use('/public', express.static('public'))
//(폼에서 PUT, DELETE 요청 가능케함) npm install method-override 
// <form action="/edit?_method=PUT" method="POST">
const methodOverride = require('method-override')
app.use(methodOverride('_method'))
// 로그인
// npm install passport passport-local express-session
const passport = require('passport');
const LocalStrategy = require('passport-local');
const session = require('express-session');
// passport 가 제공하는 미들웨어
app.use(session({secret : '비밀코드', resave : true, saveUninitialized: false}));
app.use(passport.initialize());
app.use(passport.session());
// process.env.DB_URL / PORT
require('dotenv').config()